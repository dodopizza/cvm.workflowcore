name: Publish CVM WorkflowCore

on:
  push:
    tags:
      - "Release/**"

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      DOTNET_VERSION: '6.0.x'
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      PROJECT_WORKFLOWCORE: 'src/WorkflowCore/WorkflowCore.csproj'
      PKG_NAME_WORKFLOWCORE: 'WorkflowCore'
      PROJECT_WORKFLOWCORE_MONGODB: 'src/providers/WorkflowCore.Persistence.MongoDB/WorkflowCore.Persistence.MongoDB.csproj'
      PKG_NAME_WORKFLOWCORE_MONGODB: 'WorkflowCore.Persistence.MongoDB'
      PROJECT_WORKFLOWCORE_DSL: 'src/WorkflowCore.DSL/WorkflowCore.DSL.csproj'
      PKG_NAME_WORKFLOWCORE_DSL: 'WorkflowCore.DSL'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Prepare to install packages
        id: prepare-to-install
        run: |
          dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "${{ secrets.NUGET_SOURCE }}"

      - name: Restore NuGet cache
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nugetcache-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            nugetcache-

      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/Release\//}" >> $GITHUB_OUTPUT

      - name: Restore dependencies for '${{ env.PKG_NAME_WORKFLOWCORE }}'
        run: dotnet restore ${{ env.PROJECT_WORKFLOWCORE }}

      - name: Restore dependencies for '${{ env.PKG_NAME_WORKFLOWCORE_MONGODB }}'
        run: dotnet restore ${{ env.PROJECT_WORKFLOWCORE_MONGODB }}

      - name: Restore dependencies for '${{ env.PKG_NAME_WORKFLOWCORE_DSL }}'
        run: dotnet restore ${{ env.PROJECT_WORKFLOWCORE_DSL }}

      - name: Build '${{ env.PKG_NAME_WORKFLOWCORE }}'
        run: dotnet build $PROJECT_WORKFLOWCORE --configuration Release --no-restore

      - name: Build '${{ env.PKG_NAME_WORKFLOWCORE_MONGODB }}'
        run: dotnet build $PROJECT_WORKFLOWCORE_MONGODB --configuration Release --no-restore

      - name: Build '${{ env.PKG_NAME_WORKFLOWCORE_DSL }}'
        run: dotnet build $PROJECT_WORKFLOWCORE_DSL --configuration Release --no-restore

      - name: Pack '${{ env.PKG_NAME_WORKFLOWCORE }}'
        run: dotnet pack $PROJECT_WORKFLOWCORE --configuration Release --output ./artifacts/nuget/cvm.workflowcore -p:PackageID="Dodo.Cvm.${{ env.PKG_NAME_WORKFLOWCORE }}" -p:Version=${{ steps.extract_version.outputs.VERSION }}

      - name: Pack '${{ env.PKG_NAME_WORKFLOWCORE_MONGODB }}'
        run: dotnet pack $PROJECT_WORKFLOWCORE_MONGODB --configuration Release --output ./artifacts/nuget/cvm.workflowcore -p:PackageID="Dodo.Cvm.${{ env.PKG_NAME_WORKFLOWCORE_MONGODB }}" -p:Version=${{ steps.extract_version.outputs.VERSION }}

      - name: Pack '${{ env.PKG_NAME_WORKFLOWCORE_DSL }}'
        run: dotnet pack $PROJECT_WORKFLOWCORE_DSL --configuration Release --output ./artifacts/nuget/cvm.workflowcore -p:PackageID="Dodo.Cvm.${{ env.PKG_NAME_WORKFLOWCORE_DSL }}" -p:Version=${{ steps.extract_version.outputs.VERSION }}

      #- name: Push NuGet Packages
      #  run: dotnet nuget push ./artifacts/nuget/cvm.workflowcore/*.nupkg --source ${{ secrets.NUGET_SOURCE }} --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate